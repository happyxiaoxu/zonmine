# Generated by Django 2.0.7 on 2018-09-03 07:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('seller_ids', models.TextField(blank=True, default=None, max_length=20000, null=True, verbose_name='Seller Ids')),
                ('asin_codes', models.TextField(blank=True, default=None, max_length=20000, null=True, verbose_name='Asin Codes')),
                ('scout_file', models.BinaryField(blank=True, default=None, null=True, verbose_name='Scout File')),
                ('asin_file', models.BinaryField(blank=True, default=None, null=True, verbose_name='ASIN File')),
                ('scout_status', models.BooleanField(default=False, verbose_name='Scout Status')),
                ('asin_status', models.BooleanField(default=False, verbose_name='ASIN Search Status')),
                ('scout_results_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='Scout Results Count')),
                ('asin_results_counter', models.IntegerField(blank=True, default=0, null=True, verbose_name='ASIN Results Count')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ebay_title', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Title')),
                ('ebay_url', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Url')),
                ('ebay_sold_quantity', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Quantity Sold')),
                ('ebay_price', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Price')),
                ('ebay_img_url', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Image Url')),
                ('ebay_review_count', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Review Count')),
                ('ebay_review_score', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Review Score')),
                ('ebay_brand', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Brand')),
                ('ebay_bread_crumbs', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Bread Crumbs')),
                ('ebay_cat_id', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product Category Id')),
                ('ebay_upc', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product UPC')),
                ('ebay_mpn', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Product MPN')),
                ('ebay_ssn', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Ebay Seller SSN')),
                ('amazon_url', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Url')),
                ('amazon_asin', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product ASIN')),
                ('amazon_is_prime', models.BooleanField(default=False, verbose_name='Amazon Is Prime?')),
                ('amazon_is_addon', models.BooleanField(default=False, verbose_name='Amazon Is Addon?')),
                ('amazon_title', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Title')),
                ('amazon_price', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Price')),
                ('amazon_img_url', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Image Url')),
                ('amazon_review_count', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Review Count')),
                ('amazon_review_score', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Review Score')),
                ('amazon_bread_crumbs', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Bread Crumbs')),
                ('amazon_features', models.TextField(blank=True, default=None, max_length=5000, null=True, verbose_name='Amazon Product Features')),
                ('amazon_brand', models.CharField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Brand Name')),
                ('amazon_product_images', models.TextField(blank=True, default=None, max_length=2000, null=True, verbose_name='Amazon Product Images')),
                ('amazon_description', models.TextField(blank=True, default=None, max_length=3000, null=True, verbose_name='Amazon Product Description')),
                ('amazon_weight', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Amazon Product Weight')),
                ('amazon_dimensions', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Amazon Product Dimensions')),
                ('amazon_item_model_number', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Amazon Product Model Number')),
                ('amazon_manufacturer', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Amazon Product Manufacturer')),
                ('amazon_sold_by', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Amazon Product Sold By')),
                ('amazon_in_stock', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Amazon Product In Stock')),
                ('updated_timestamp', models.DateTimeField(auto_now=True, null=True, verbose_name='Last Updated At')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scout.Job')),
            ],
        ),
        migrations.CreateModel(
            name='Proxy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Proxy Ip')),
            ],
            options={
                'verbose_name_plural': 'Proxies',
            },
        ),
    ]
